{"ast":null,"code":"var _jsxFileName = \"D:\\\\reacttut\\\\awesome\\\\src\\\\App.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Slot = () => {\n  let x = 'smile';\n  let y = 'smile';\n  let z = 'smil';\n\n  if (x === y && y === z) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slot_inner\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [x, \" \", y, \" \", z]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"This is Matching.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slot_inner\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [x, \" \", y, \" \", z]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"This is not Matching Matching.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 18\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 16\n      }, this)\n    }, void 0, false);\n  }\n};\n\n_c = Slot;\n\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"heading_style\",\n      children: [\" Welcome to \", /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          fontWeight: \"bold\"\n        },\n        children: \"Slot machine game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 52\n      }, this), \" :slot\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(Slot, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true);\n};\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Slot\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["D:/reacttut/awesome/src/App.jsx"],"names":["React","Slot","x","y","z","App","fontWeight"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,MAAMC,IAAI,GAAG,MAAK;AACd,MAAIC,CAAC,GAAC,OAAN;AACA,MAAIC,CAAC,GAAC,OAAN;AACA,MAAIC,CAAC,GAAC,MAAN;;AAEA,MAAIF,CAAC,KAAGC,CAAL,IAAYA,CAAC,KAAGC,CAAnB,EAAsB;AAClB,wBACC;AAAA,6BACG;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACE;AAAA,qBACEF,CADF,OACMC,CADN,OACUC,CADV;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADH,qBADD;AAUH,GAXD,MAaI;AACA,wBACI;AAAA,6BACG;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACE;AAAA,qBACEF,CADF,OACMC,CADN,OACUC,CADV;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADH,qBADJ;AAUH;AACJ,CA9BD;;KAAMH,I;;AAgCN,MAAMI,GAAG,GAAG,MAAK;AACd,sBACI;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,eAAd;AAAA,8CAA0C;AAAM,QAAA,KAAK,EAAE;AAAEC,UAAAA,UAAU,EAAE;AAAd,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAA1C;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAGE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA,kBADJ;AAOF,CARD;;MAAMD,G;AAUN,eAAeA,GAAf","sourcesContent":["import React from 'react';\r\n\r\nconst Slot = () =>{\r\n    let x='smile';\r\n    let y='smile';\r\n    let z='smil';\r\n\r\n    if((x===y) && (y===z)){\r\n        return(\r\n         <>\r\n            <div className=\"slot_inner\">\r\n              <h1>\r\n               {x} {y} {z}\r\n              </h1>\r\n              <h1>This is Matching.</h1>\r\n            </div>\r\n         </>\r\n        );\r\n    }\r\n\r\n    else{\r\n        return(\r\n            <>\r\n               <div className=\"slot_inner\">\r\n                 <h1>\r\n                  {x} {y} {z}\r\n                 </h1>\r\n                 <h1>This is not Matching Matching.</h1>\r\n               </div>\r\n            </>\r\n           );\r\n    }\r\n}\r\n\r\nconst App = () =>{\r\n   return(\r\n       <>\r\n         <h1 className=\"heading_style\"> Welcome to <span style={{ fontWeight: \"bold\"}}>Slot machine game</span> :slot</h1>\r\n\r\n         <Slot/>\r\n       </>\r\n   )\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}