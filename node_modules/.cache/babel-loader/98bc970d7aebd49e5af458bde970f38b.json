{"ast":null,"code":"var _jsxFileName = \"D:\\\\reacttut\\\\awesome\\\\src\\\\SlotM.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Slot = props => {\n  // let x='smile';\n  // let y='smile';\n  // let z='smil';\n  let x = props.x;\n  let y = props.y;\n  let z = props.z;\n\n  if (x === y && y === z) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slot_inner\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [x, \" \", y, \" \", z]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"This is Matching.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  } else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slot_inner\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [x, \" \", y, \" \", z]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"This is not Matching .\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 18\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 16\n      }, this)\n    }, void 0, false);\n  }\n};\n\n_c = Slot;\nexport default Slot;\n\nvar _c;\n\n$RefreshReg$(_c, \"Slot\");","map":{"version":3,"sources":["D:/reacttut/awesome/src/SlotM.jsx"],"names":["React","Slot","props","x","y","z"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAU;AACnB;AACA;AACA;AACA,MAAIC,CAAC,GAACD,KAAK,CAACC,CAAZ;AACA,MAAIC,CAAC,GAACF,KAAK,CAACE,CAAZ;AACA,MAAIC,CAAC,GAACH,KAAK,CAACG,CAAZ;;AAEA,MAAIF,CAAC,KAAGC,CAAL,IAAYA,CAAC,KAAGC,CAAnB,EAAsB;AAClB,wBACC;AAAA,6BACG;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACE;AAAA,qBACEF,CADF,OACMC,CADN,OACUC,CADV;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADH,qBADD;AAUH,GAXD,MAaI;AACA,wBACI;AAAA,6BACG;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACE;AAAA,qBACEF,CADF,OACMC,CADN,OACUC,CADV;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADH,qBADJ;AAUH;AACJ,CAjCD;;KAAMJ,I;AAmCN,eAAeA,IAAf","sourcesContent":["import React from 'react';\r\n\r\nconst Slot = (props) =>{\r\n    // let x='smile';\r\n    // let y='smile';\r\n    // let z='smil';\r\n    let x=props.x;\r\n    let y=props.y;\r\n    let z=props.z; \r\n\r\n    if((x===y) && (y===z)){\r\n        return(\r\n         <>\r\n            <div className=\"slot_inner\">\r\n              <h1>\r\n               {x} {y} {z}\r\n              </h1>\r\n              <h1>This is Matching.</h1>\r\n            </div>\r\n         </>\r\n        );\r\n    }\r\n\r\n    else{\r\n        return(\r\n            <>\r\n               <div className=\"slot_inner\">\r\n                 <h1>\r\n                  {x} {y} {z}\r\n                 </h1>\r\n                 <h1>This is not Matching .</h1>\r\n               </div>\r\n            </>\r\n           );\r\n    }\r\n}\r\n\r\nexport default Slot;\r\n"]},"metadata":{},"sourceType":"module"}